//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34014
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.34014.
// 
#pragma warning disable 1591

namespace service.uniservice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceROSoap", Namespace="http://tempuri.org/")]
    public partial class WebServiceRO : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Statistic_IPOperationCompleted;
        
        private System.Threading.SendOrPostCallback startThread_SVGtoPNGOperationCompleted;
        
        private System.Threading.SendOrPostCallback isCompleteThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback readResultOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServiceRO() {
            this.Url = global::service.Properties.Settings.Default.service_uniserver_WebServiceRO;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Statistic_IPCompletedEventHandler Statistic_IPCompleted;
        
        /// <remarks/>
        public event startThread_SVGtoPNGCompletedEventHandler startThread_SVGtoPNGCompleted;
        
        /// <remarks/>
        public event isCompleteThreadCompletedEventHandler isCompleteThreadCompleted;
        
        /// <remarks/>
        public event readResultCompletedEventHandler readResultCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Statistic_IP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Statistic_IP() {
            object[] results = this.Invoke("Statistic_IP", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Statistic_IPAsync() {
            this.Statistic_IPAsync(null);
        }
        
        /// <remarks/>
        public void Statistic_IPAsync(object userState) {
            if ((this.Statistic_IPOperationCompleted == null)) {
                this.Statistic_IPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatistic_IPOperationCompleted);
            }
            this.InvokeAsync("Statistic_IP", new object[0], this.Statistic_IPOperationCompleted, userState);
        }
        
        private void OnStatistic_IPOperationCompleted(object arg) {
            if ((this.Statistic_IPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Statistic_IPCompleted(this, new Statistic_IPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/startThread_SVGtoPNG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string startThread_SVGtoPNG([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] inputfile, ref int error, ref string stringError) {
            object[] results = this.Invoke("startThread_SVGtoPNG", new object[] {
                        inputfile,
                        error,
                        stringError});
            error = ((int)(results[1]));
            stringError = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void startThread_SVGtoPNGAsync(byte[] inputfile, int error, string stringError) {
            this.startThread_SVGtoPNGAsync(inputfile, error, stringError, null);
        }
        
        /// <remarks/>
        public void startThread_SVGtoPNGAsync(byte[] inputfile, int error, string stringError, object userState) {
            if ((this.startThread_SVGtoPNGOperationCompleted == null)) {
                this.startThread_SVGtoPNGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartThread_SVGtoPNGOperationCompleted);
            }
            this.InvokeAsync("startThread_SVGtoPNG", new object[] {
                        inputfile,
                        error,
                        stringError}, this.startThread_SVGtoPNGOperationCompleted, userState);
        }
        
        private void OnstartThread_SVGtoPNGOperationCompleted(object arg) {
            if ((this.startThread_SVGtoPNGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startThread_SVGtoPNGCompleted(this, new startThread_SVGtoPNGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isCompleteThread", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int isCompleteThread(string ID, ref int error, ref string stringError) {
            object[] results = this.Invoke("isCompleteThread", new object[] {
                        ID,
                        error,
                        stringError});
            error = ((int)(results[1]));
            stringError = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void isCompleteThreadAsync(string ID, int error, string stringError) {
            this.isCompleteThreadAsync(ID, error, stringError, null);
        }
        
        /// <remarks/>
        public void isCompleteThreadAsync(string ID, int error, string stringError, object userState) {
            if ((this.isCompleteThreadOperationCompleted == null)) {
                this.isCompleteThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisCompleteThreadOperationCompleted);
            }
            this.InvokeAsync("isCompleteThread", new object[] {
                        ID,
                        error,
                        stringError}, this.isCompleteThreadOperationCompleted, userState);
        }
        
        private void OnisCompleteThreadOperationCompleted(object arg) {
            if ((this.isCompleteThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isCompleteThreadCompleted(this, new isCompleteThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/readResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] readResult(string ID, ref int error, ref string stringError) {
            object[] results = this.Invoke("readResult", new object[] {
                        ID,
                        error,
                        stringError});
            error = ((int)(results[1]));
            stringError = ((string)(results[2]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void readResultAsync(string ID, int error, string stringError) {
            this.readResultAsync(ID, error, stringError, null);
        }
        
        /// <remarks/>
        public void readResultAsync(string ID, int error, string stringError, object userState) {
            if ((this.readResultOperationCompleted == null)) {
                this.readResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadResultOperationCompleted);
            }
            this.InvokeAsync("readResult", new object[] {
                        ID,
                        error,
                        stringError}, this.readResultOperationCompleted, userState);
        }
        
        private void OnreadResultOperationCompleted(object arg) {
            if ((this.readResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readResultCompleted(this, new readResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void Statistic_IPCompletedEventHandler(object sender, Statistic_IPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Statistic_IPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Statistic_IPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void startThread_SVGtoPNGCompletedEventHandler(object sender, startThread_SVGtoPNGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startThread_SVGtoPNGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startThread_SVGtoPNGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string stringError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void isCompleteThreadCompletedEventHandler(object sender, isCompleteThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isCompleteThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isCompleteThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string stringError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void readResultCompletedEventHandler(object sender, readResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string stringError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591